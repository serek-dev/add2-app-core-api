image: docker:20.10

services:
  - docker:20.10-dind

variables:
  DOCKER_HOST: tcp://docker:2375
  DOCKER_DRIVER: overlay2
  FF_NETWORK_PER_BUILD: 1

stages:
  - test
  - build
  - deploy

tests_phpunit:
  stage: test
  script:
    - docker-compose -f docker-compose.gitlab.yml run --rm tests_unit

tests_architecture:
  stage: test
  script:
    - docker-compose -f docker-compose.gitlab.yml run --rm tests_architecture

.before_script_template: &prepare-ssh
  before_script:
    # Prepare SSH keys
    - 'command -v ssh-agent >/dev/null || ( apk add --update openssh )'
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - ssh-keyscan $VM_IPADDRESS >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
    - echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa
    # Establish connection & Deploy
    - ssh -o StrictHostKeyChecking=no $VM_USER@$VM_IPADDRESS "ls -l -a"

build_production:
  stage: build
  only:
    - master
  script:
    - docker login registry.gitlab.com -u $CI_DEPLOY_USER -p $CI_DEPLOY_PASSWORD
    - echo "$ENV" >> .env.prod.local
    # Build app
    - docker build -f docker/app/Dockerfile --target prod -t registry.gitlab.com/addtwo/core-api/app:prod .
    - docker push registry.gitlab.com/addtwo/core-api/app --all-tags
    # Build proxy
    - docker build -f docker/proxy/Dockerfile -t registry.gitlab.com/addtwo/core-api/proxy:prod .
    - docker push registry.gitlab.com/addtwo/core-api/proxy --all-tags

deploy_production:
  image: alpine:latest
  stage: deploy
  <<: *prepare-ssh
  needs:
    - job: build_production
  only:
    - master
  script:
    # Copy production.yml
    - scp -i ~/.ssh/id_rsa docker-compose.prod.yml $VM_USER@$VM_IPADDRESS:~/core-api.yml
    # Update docker images for app & web
    - ssh $VM_USER@$VM_IPADDRESS "docker compose -f core-api.yml pull && exit"
    # Stop production instances removing volumes, network and orphans
    - ssh $VM_USER@$VM_IPADDRESS "docker compose -p core-api -f core-api.yml down -v --remove-orphans && exit"
    # Re-run and serve
    - ssh $VM_USER@$VM_IPADDRESS "docker compose -p core-api -f core-api.yml up --build --force-recreate -d && exit"
    - ssh $VM_USER@$VM_IPADDRESS "docker compose -f core-api.yml -p core-api exec app sh -c "chmod +x ./tools/post_deploy.sh && ./tools/post_deploy.sh && exit" && exit"