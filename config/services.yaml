# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    _instanceof:

        App\Catalog\Specification\MealSpecificationInterface:
            tags: [ 'app.catalog.meal_specification.update' ]

        App\Catalog\Specification\ProductSpecificationInterface:
            tags: [ 'app.catalog.product_specification.create' ]
        App\Catalog\Specification\Product\NutritionMistakeThresholdSpecification:
            tags: [ 'app.catalog.product_specification.update' ]
        App\Metric\Factory\MetricFactoryInterface:
            tags: [ 'app.metric.factory' ]

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/*/DependencyInjection/'
            - '../src/*/Command/'
            - '../src/*/Dto/'
            - '../src/*/Exception/'
            - '../src/*/View/'
            - '../src/*/Value/'
            - '../src/*/Event/'
            - '../src/*/Entity/'
            - '../src/*/Kernel.php'

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    App\Catalog\Factory\ProductFactory:
        class: App\Catalog\Factory\ProductFactory
        arguments:
            $specifications: !tagged app.catalog.product_specification.create

    App\Catalog\Handler\UpdateProductHandler:
        class: App\Catalog\Handler\UpdateProductHandler
        arguments:
            $specifications: !tagged app.catalog.product_specification.update

    App\Metric\Factory\MetricFactoryDirector:
        class: App\Metric\Factory\MetricFactoryDirector
        arguments:
            $factories: !tagged app.metric.factory

    App\Catalog\Handler\UpdateMealHandler:
        class: App\Catalog\Handler\UpdateMealHandler
        arguments:
            $specifications: !tagged app.catalog.meal_specification.update